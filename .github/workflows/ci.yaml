name: eMAN Actions

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  lint-fmt-test-build:
    name: Lint, Format Check, Test, and Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cargo fmt check
        run: cargo fmt --all -- --check

      - name: Cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo test
        run: cargo test --workspace --release --locked

      - name: Cargo build
        run: cargo build --workspace --release --locked

  release:
    name: Release Linux Multi-Arch Binaries
    needs: lint-fmt-test-build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install musl tools (for musl targets)
        if: contains(matrix.target, 'musl')
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Archive binary
        run: |
          mkdir artifacts
          BIN_NAME="eman"
          cp target/${{ matrix.target }}/release/$BIN_NAME artifacts/
          tar -czf eman-${{ matrix.target }}.tar.gz -C artifacts $BIN_NAME

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            eman-${{ matrix.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.TRAC3X_SECRET }}
